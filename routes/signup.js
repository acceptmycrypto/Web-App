var express = require('express');
var app = express();
var router = express.Router();
var mysql = require('mysql');
var bodyParser = require('body-parser');
var methodOverride = require('method-override');
//for login/logout (authentication)
var bcrypt = require('bcryptjs');
var jwt = require('jsonwebtoken');
//use sendgrid
var sgMail = require("@sendgrid/mail");
var keys = require("../key");
sgMail.setApiKey(keys.sendgrid);

app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(express.static('public'));
app.use(methodOverride('_method'));

var connection = mysql.createConnection({
  host: 'localhost',

  // Your port; if not 3306
  port: 3306,

  // Your username
  user: 'root',

  // Your password
  password: 'password',
  database: 'crypto_db'
});

connection.connect(function(err){
  if(!err) {
      console.log("Database is connected ... signup");
  } else {
      console.log("Error connecting database ... nn");
  }
  });

  //this worked
    // router.post("/register", function(req,res){

    //   var ob = Object.assign({}, req.body, {more: 'stuff'});
    //   console.log('---------line 43---------');
    //   console.log(req.body);
    //   console.log('--------line 45----------');


    //   res.json(ob);
    //   // res.send('hi'); //works
    // });

  router.post("/register", function(req,res) {
    // var today = new Date();
    console.log(req.body);
    //First we make a query to see if user exists in the database
    connection.query('Select * from users where email = ?', [req.body.email], function (error, results, fields) {
      if (error) {
        console.log("error ocurred: ", error);
      }

      res.json(results)

    });

  //   bcrypt.genSalt(10, function(err, salt) {
  //           bcrypt.hash(req.body.password, salt, function(err, hash) {

  //             let users={
  //               "first_name":req.body.first_name,
  //               "last_name":req.body.last_name,
  //               "username": req.body.username,
  //               "email":req.body.email,
  //               "password": hash
  //               // "created":today,
  //               // "modified":today
  //             }

  //             // res.json(users);
  //             connection.query('INSERT INTO users SET ?',[users], function (error, results, fields, next) {
  //               if (error) {
  //                 console.log("error ocurred",error);
  //                 res.send({
  //                   "code":400,
  //                   "failed":"error ocurred"
  //                 })
  //               }

  //               res.json(results)

  //             });
  //   });

  // });

});

// This doens't work the way it supposed to, yet. Will work on this next.
// I need to be able to insert info into two diffrent tables simultainously on formSubmit.

  //   let cryptos = req.body.cryptosProfile;
  //
  // connection.query('INSERT INTO cryptos_id SET ?',cryptos, function (error, results, fields, next) {
  //   if (error) {
  //     console.log("error ocurred",error);
  //     res.send({
  //       "code":400,
  //       "failed":"error ocurred"
  //     })
  //   }else{
  //     console.log('The solution is: ', results);
  //     // Redirect to next page (first user page).
  //     res.send({
  //       "code":200,
  //       "success":"user registered sucessfully"
  //         });
  //   }
  //   });

  // router.post('/login',login.login)
  // app.use('/api', router)

/*
Sendgrid Example. Wait for singup to be completed before this can be integrated
const msg = {
  to: 'simonnguyen3054@gmail.com',
  from: 'simon@acceptmycrypto.com',
  subject: 'Email Testing: Generated by our server',
  text: 'and easy to do anywhere, even with Node.js',
  html: '<strong>and easy to do anywhere, even with Node.js</strong>',
};
sgMail.send(msg);
*/

module.exports = router;